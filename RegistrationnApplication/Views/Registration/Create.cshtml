@model RegistrationnApplication.Models.Registration

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Registration</h4>
<hr />

<div class="row">
    <div class="col-md-6 offset-md-3">
        <form asp-action="Create" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label">Name</label>
                <input asp-for="Name" class="form-control" required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Gender" class="control-label">Gender</label>
               @{
                    foreach (var item in ViewBag.GenderList)
                    {
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" asp-for="GenderId" id="inline1" value="@item.Value">
                            <label class="form-check-label" for="inlineCheckbox1">@item.Text</label>
                        </div>
                    }
                }
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label">Description</label>
                <input asp-for="Description" class="form-control" required />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" type="email" required />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" required />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CountryId" class="control-label">Country</label>
                <select asp-for="CountryId" asp-items="ViewBag.CountryList" class="form-control" id="CountryId" required>
                    <option value="">-- Select Country --</option>
                </select>
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StateId" class="control-label">State</label>
                <select asp-for="StateId" asp-items="ViewBag.StateList" class="form-control" id="StateId" required>
                    <option value="">-- Select State --</option>
                </select>
                <span asp-validation-for="StateId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $('#CountryId').change(function () {
            var countryId = $(this).val();

            $.ajax({
                url: '/Registration/GetStatesByCountry?id=' + countryId,
                type: 'GET',
                success: function (data) {
                    $('#StateId').empty();
                    $('#StateId').append($('<option>').text('Select State').val(''));

                    if (data && Array.isArray(data)) {
                        $.each(data, function (i, item) {
                            console.log(item);
                            $('#StateId').append($('<option>').text(item.text).val(item.value));
                        });
                    } else {
                        console.error('Invalid data returned for states.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching states:', error);
                }
            });
        });
    </script>
}
